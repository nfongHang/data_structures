from data_structures import *

#testdata
m1=Matrix(2,3)
m1.matrix=[[0,-2,2],
           [5,1,5]]

m2=Matrix(3,2)
m2.matrix=[[0,1],
           [3,4],
           [6,7]]

m3 = Matrix(3,3)
m3.matrix=[[1,2,3],
           [4,5,6],
           [7,8,9]]

m4 = Matrix(3,3)
m4.matrix=[[0,2,3],[4,5,6],[7,8,9]]

m5 = Matrix (1,2)
m5.matrix=[[2],[3]]

m6 = Matrix (1,1)
m6.matrix = [[5]]

m7 = Matrix(4,4)
m7.matrix=[[1,3,5,7],
           [11,13,17,19],
           [23,27,31,37],
           [41,43,47,51]]

m8 = Matrix(4,4)
m8.matrix=[[0,2,3,4],
           [6,7,8,9],
           [11,12,13,14],
           [16,17,18,19]]
m9 = Matrix(5,5)
m9.matrix = [[1,2,3,4,5],
      [6,7,8,9,10],
      [11,12,13,14,15],
      [16,17,18,19,20],
      [21,22,23,24,25]]

m10 = Matrix(3,3)
m10.matrix = [[7,5,3],
              [2,1,6],
              [1,2,3]]

print(m1)
print(m2)

print("result:\n",m1*m5)
print(m4)
test=m10.gaussian_elimination()
print(test[0],test[1])
print("determinant:",m2.get_determinant())
print(m7+m8)


# random testcases
if False:
    for x in range(0,10**100):
        try:
            m1=Matrix(5,5)
            test=[]
            for i in range(5):
                temp=[]
                for j in range(5):
                    temp.append(random.randint(-100,100))
                test.append(temp)

            m1.matrix=copy(test)
            print(m1,m1.get_determinant())
            
        except Exception as ex:
            print("oops! Here's the data that went wrong:")
            for line in test:
                print(line,":D")
            template = "An exception of type {0} occurred. Arguments:\n{1!r}"
            message = template.format(type(ex).__name__, ex.args)
            print(message)
            break


